"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const element_1=__importDefault(require("@heymarco/element"));class Control extends element_1.default{constructor(selector){super(selector)}get markBlur(){return this.is(".blur")}set markBlur(blur){this.toggleClass("blur",blur)}get markActive(){return this.is(".active, .actived")}set markActive(active){this.removeClass("actived").toggleClass("active",active)}get markPassive(){return this.is(".passive")}set markPassive(passive){this.toggleClass("passive",passive)}get markEnabled(){return this.is(".enabled")}set markEnabled(enabled){this.toggleClass("enabled",enabled)}get markDisabled(){return this.is(".disabled")}set markDisabled(disabled){this.toggleClass("disabled",disabled)}clearAnimMarkOuts(){super.clearAnimMarkOuts(),this.markBlur=!1,this.markPassive=!1,this.markEnabled=!1,this.markDisabled=!1}get active(){return this.is(":active, :checked, .active, .actived")}set active(active){if(active){let items=this.filter(":not(:active):not(:checked):not(.active):not(.actived)");items.markPassive=!1,items.markActive=!0,items.trigger("change")}else{let items=this.filter(":active, :checked, .active, .actived");items.markActive=!1,items.markPassive=!0,items.trigger("change")}}get disabled(){return this.is(":disabled")}set disabled(disabled){if(disabled){let items=this.filter(":not(:disabled)");items.prop("disabled",!0),items.markEnabled=!1,items.markDisabled=!0,items.trigger("disabled")}else{let items=this.filter(":disabled");items.prop("disabled",!1),items.markDisabled=!1,items.markEnabled=!0,items.is(".actived")&&items.removeClass("actived").addClass("active"),items.trigger("enabled")}}get enabled(){return!this.disabled}set enabled(enabled){this.disabled=!enabled}}exports.default=Control;
